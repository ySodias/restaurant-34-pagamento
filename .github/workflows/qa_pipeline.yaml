name: "QA Pipeline"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  qa:
    name: "Project Tests"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Configure Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install Deps
        run: npm install

      - name: Execute Tests
        run: npm run test

  sonar:
    needs: qa
    if: ${{ always() && !cancelled() && needs.qa.result == 'success' }}
    name: QA Sonar
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.javascript.typescript=true
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            # -Dsonar.exclusions=**/node_modules/**,**/tests/**,**/dist/**,**/tests/**,**/coverage/**
            # -Dsonar.sources=src
            # -Dsonar.tests=src
            -Dsonar.test.inclusions=src/**/*.spec.js,src/**/*.spec.jsx,src/**/*.test.js,src/**/*.test.jsx
            -Dsonar.javascript.lcov.reportPaths=coverage/jest/lcov.info
            -Dsonar.testExecutionReportPaths=coverage/jest/testlog.xml